/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../../index";
import { ApiKeys } from "../resources/apiKeys/client/Client";
export declare namespace ServiceAccounts {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class ServiceAccounts {
    protected readonly _options: ServiceAccounts.Options;
    protected _apiKeys: ApiKeys | undefined;
    constructor(_options?: ServiceAccounts.Options);
    get apiKeys(): ApiKeys;
    /**
     * List all service accounts in the workspace
     *
     * @param {ServiceAccounts.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.serviceAccounts.list()
     */
    list(requestOptions?: ServiceAccounts.RequestOptions): core.HttpResponsePromise<ElevenLabs.WorkspaceServiceAccountListResponseModel>;
    private __list;
}
