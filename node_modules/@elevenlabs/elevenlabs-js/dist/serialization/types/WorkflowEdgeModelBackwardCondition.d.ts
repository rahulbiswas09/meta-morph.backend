/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../index";
import * as ElevenLabs from "../../api/index";
import * as core from "../../core";
import { WorkflowLlmConditionModel } from "./WorkflowLlmConditionModel";
import { WorkflowResultConditionModel } from "./WorkflowResultConditionModel";
import { WorkflowUnconditionalModel } from "./WorkflowUnconditionalModel";
export declare const WorkflowEdgeModelBackwardCondition: core.serialization.Schema<serializers.WorkflowEdgeModelBackwardCondition.Raw, ElevenLabs.WorkflowEdgeModelBackwardCondition>;
export declare namespace WorkflowEdgeModelBackwardCondition {
    type Raw = WorkflowEdgeModelBackwardCondition.Llm | WorkflowEdgeModelBackwardCondition.Result | WorkflowEdgeModelBackwardCondition.Unconditional;
    interface Llm extends WorkflowLlmConditionModel.Raw {
        type: "llm";
    }
    interface Result extends WorkflowResultConditionModel.Raw {
        type: "result";
    }
    interface Unconditional extends WorkflowUnconditionalModel.Raw {
        type: "unconditional";
    }
}
